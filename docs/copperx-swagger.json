{
    "openapi": "3.0.0",
    "paths": {
        "/": {
            "get": {
                "operationId": "AppController_getHello",
                "summary": "Welcome endpoint",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "App"
                ]
            }
        },
        "/api/auth/email-otp/request": {
            "post": {
                "operationId": "AuthController_loginEmailOtp",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginEmailOtpRequestDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LoginEmailOtpResponseDto"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            }
        },
        "/api/auth/email-otp/authenticate": {
            "post": {
                "operationId": "AuthController_verifyEmailOtp",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VerifyEmailOtpRequestDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticateResponseDto"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            }
        },
        "/api/auth/web3auth/authenticate": {
            "post": {
                "operationId": "AuthController_web3authAuthenticate",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Web3AuthAuthenticateDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticateResponseDto"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            }
        },
        "/api/auth/logout": {
            "post": {
                "operationId": "AuthController_userLogout",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Auth"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/auth/me": {
            "get": {
                "operationId": "AuthController_getAuthUser",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthUserDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Auth"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/auth/points-token": {
            "post": {
                "operationId": "AuthController_getPointsAccessToken",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PointsAccessDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Auth"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/auth/flags": {
            "put": {
                "operationId": "AuthController_setFeatureFlags",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserFlagDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthUserDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Auth"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/auth/google/authenticate": {
            "post": {
                "operationId": "AuthController_googleAuthenticate",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GoogleAuthenticateDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticateResponseDto"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            }
        },
        "/api/personal-access-tokens": {
            "get": {
                "operationId": "PersonalAccessTokenController_getAll",
                "summary": "Get all personal access tokens",
                "parameters": [
                    {
                        "name": "page",
                        "required": true,
                        "in": "query",
                        "description": "Starts from 1",
                        "schema": {
                            "minimum": 1,
                            "default": 1,
                            "example": 1,
                            "type": "number"
                        }
                    },
                    {
                        "name": "limit",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "minimum": 1,
                            "maximum": 200,
                            "default": 10,
                            "example": 1,
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/PageDto"
                                        },
                                        {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/PersonalAccessTokenDto"
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Personal Access Tokens"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "post": {
                "operationId": "PersonalAccessTokenController_create",
                "summary": "Create personal access token",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreatePersonalAccessTokenDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PersonalAccessTokenWithPlainTokenDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Personal Access Tokens"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/personal-access-tokens/{id}": {
            "get": {
                "operationId": "PersonalAccessTokenController_get",
                "summary": "Get personal access token by ID",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PersonalAccessTokenDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Personal Access Tokens"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "put": {
                "operationId": "PersonalAccessTokenController_update",
                "summary": "Update personal access token",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdatePersonalAccessTokenDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PersonalAccessTokenDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Personal Access Tokens"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "delete": {
                "operationId": "PersonalAccessTokenController_delete",
                "summary": "Delete personal access token",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Personal Access Tokens"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/personal-access-tokens/{id}/regenerate": {
            "post": {
                "operationId": "PersonalAccessTokenController_regenerate",
                "summary": "Regenerate personal access token",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PersonalAccessTokenWithPlainTokenDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Personal Access Tokens"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/wallets": {
            "get": {
                "operationId": "WalletController_getWallets",
                "summary": "Get organization wallets",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/WalletDto"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Wallets"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "post": {
                "operationId": "WalletController_generateWallet",
                "summary": "Generate or get existing wallet for organization",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GenerateWalletDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns existing or newly generated wallet",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WalletDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Wallets"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/wallets/default": {
            "get": {
                "operationId": "WalletController_getDefaultWallet",
                "summary": "Get default wallet for organization",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Returns the default wallet",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WalletDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Wallets"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "post": {
                "operationId": "WalletController_setDefaultWallet",
                "summary": "Set default wallet for organization",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SetDefaultWalletDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Default wallet set successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WalletDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Wallets"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/wallets/balance": {
            "get": {
                "operationId": "WalletController_getBalance",
                "summary": "Get wallet token balance for default wallet",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Returns token balance",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BalanceResponseDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Wallets"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/wallets/balances": {
            "get": {
                "operationId": "WalletController_getWalletBalances",
                "summary": "Get balances for all organization wallets",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/WalletBalanceDto"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Wallets"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/wallets/networks": {
            "get": {
                "operationId": "WalletController_getSupportedNetworks",
                "summary": "Get supported blockchain networks",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Returns list of supported chain IDs",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Wallets"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/wallets/{chainId}/tokens/{token}/balance": {
            "get": {
                "operationId": "WalletController_getTokenBalance",
                "summary": "Get token balance for specific chain",
                "parameters": [
                    {
                        "name": "chainId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "token",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns token balance",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BalanceResponseDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Wallets"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/wallets/recover-tokens": {
            "post": {
                "operationId": "WalletController_recoverTokens",
                "summary": "Recover tokens from wallet",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RecoverTokensDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Wallets"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/kycs": {
            "get": {
                "operationId": "KycController_findAll",
                "summary": "List of kycs",
                "description": "Returns the list of kycs",
                "parameters": [
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "Page number. Starts from 1",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of items per page",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/PageDto"
                                        },
                                        {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/KycDto"
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "KYC"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "post": {
                "operationId": "KycController_create",
                "summary": "Create kyc",
                "description": "Create a new kyc",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateKycWithFileDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/KycDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "KYC"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/kycs/{id}": {
            "get": {
                "operationId": "KycController_get",
                "summary": "Get kyc",
                "description": "Get a kyc",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/KycDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "KYC"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "put": {
                "operationId": "KycController_update",
                "summary": "Update KYC details",
                "description": "Update an existing KYC",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateKycDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/KycDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "KYC"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/kycs/public/{signature}/detail": {
            "get": {
                "operationId": "KycController_getKycPublicDetail",
                "summary": "Return kyc details for public pages",
                "parameters": [
                    {
                        "name": "signature",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/KycUrlDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "KYC"
                ]
            }
        },
        "/api/kycs/public/{signature}/kyc-url": {
            "get": {
                "operationId": "KycController_getLatestKyc",
                "summary": "Return kyc url",
                "parameters": [
                    {
                        "name": "signature",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/KycUrlDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "KYC"
                ]
            }
        },
        "/api/kycs/kyb-detail/{id}/additional-info": {
            "post": {
                "operationId": "KycController_submitKybAdditionalInfo",
                "summary": "Submit additional KYB information",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/KybAdditionalInfoDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/KybAdditionalInfoDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "KYC"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "put": {
                "operationId": "KycController_updateKybAdditionalInfo",
                "summary": "Update additional KYB information",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/KybAdditionalInfoDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/KybDetailDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "KYC"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/kycs/kyb-detail/{id}/document": {
            "post": {
                "operationId": "KycController_uploadKybDocument",
                "summary": "Upload kyb document",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UploadKybDocumentDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/KybDocumentDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "KYC"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/kycs/kyb-detail/{id}/document/{documentId}": {
            "delete": {
                "operationId": "KycController_deleteKybDocument",
                "summary": "Delete kyb document",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "documentId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "KYC"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/kycs/kyb-detail/{id}/kyc-detail": {
            "post": {
                "operationId": "KycController_createKybKycDetail",
                "summary": "Create kyc detail for kyb",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateKycDetailWithFileDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/KycDetailDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "KYC"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/kycs/kyb-detail/{kybDetailId}/kyc-detail/{kycDetailId}": {
            "put": {
                "operationId": "KycController_updateKybKycDetail",
                "summary": "Update kyc detail for kyb",
                "parameters": [
                    {
                        "name": "kybDetailId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "kycDetailId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateKycDetailWithFileDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/KycDetailDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "KYC"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "delete": {
                "operationId": "KycController_deleteKybKycDetail",
                "summary": "Delete UBO from KYB",
                "description": "Soft delete a UBO (KYC detail) from KYB detail",
                "parameters": [
                    {
                        "name": "kybDetailId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "kycDetailId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "KYC"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/kycs/kyb-detail/{id}/submit": {
            "post": {
                "operationId": "KycController_submitKybForReview",
                "summary": "Submit kyb for review",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/KycDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "KYC"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/kycs/{id}/reopen-kyb": {
            "post": {
                "operationId": "KycController_reopenKycForReview",
                "summary": "Reopen kyb submitted for review",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/KycDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "KYC"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/kycs/status/{email}": {
            "get": {
                "operationId": "KycController_getKycStatusFromEmail",
                "summary": "Return kyc status from email for public pages",
                "parameters": [
                    {
                        "name": "email",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "KYC"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/kycs/states/{countryCode}": {
            "get": {
                "operationId": "KycController_getStatesByCountry",
                "summary": "Get states by country code",
                "description": "Returns list of states for given ISO 3166-1 alpha-2 country code",
                "parameters": [
                    {
                        "name": "countryCode",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/StateResponseDto"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "KYC"
                ]
            }
        },
        "/api/accounts": {
            "get": {
                "operationId": "AccountController_findAll",
                "summary": "List of accounts",
                "description": "Returns the list of accounts",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/ListDto"
                                        },
                                        {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/AccountDto"
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Account"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "post": {
                "operationId": "AccountController_createAccount",
                "summary": "Create an account",
                "description": "Create an account",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateAccountDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Account"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/accounts/{id}": {
            "get": {
                "operationId": "AccountController_getAccount",
                "summary": "Get account",
                "description": "Get a account",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Account"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "delete": {
                "operationId": "AccountController_delete",
                "summary": "Delete account",
                "description": "Delete an account",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Account"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/accounts/{id}/submit-permit": {
            "post": {
                "operationId": "AccountController_submitPermit",
                "summary": "Submit permit for approval",
                "description": "Submit permit for approval",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SubmitPermitDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubmitPermitResponseDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Account"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/accounts/{id}/renew-approval": {
            "post": {
                "operationId": "AccountController_renewApproval",
                "summary": "Renew approval for account",
                "description": "Renew approval for account",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubmitPermitResponseDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Account"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/accounts/new-wallet": {
            "post": {
                "operationId": "AccountController_newAccountInfo",
                "summary": "Get new account info",
                "description": "Get new account info",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WalletDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Account"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/accounts/migrate-account": {
            "post": {
                "operationId": "AccountController_migrateAccount",
                "summary": "Migrate account to safe wallet",
                "description": "Migrate account to safe wallet",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubmitPermitResponseDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Account"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/accounts/recover-tokens": {
            "post": {
                "operationId": "AccountController_recoverTokens",
                "summary": "Recover tokens",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RecoverTokensDto"
                            }
                        }
                    }
                },
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Account"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/transfers": {
            "get": {
                "operationId": "TransferController_findAll",
                "summary": "List of transfers",
                "parameters": [
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "Page number. Starts from 1",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of items per page",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "sourceCountry",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "$ref": "#/components/schemas/Country"
                        }
                    },
                    {
                        "name": "destinationCountry",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "$ref": "#/components/schemas/Country"
                        }
                    },
                    {
                        "name": "status",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "$ref": "#/components/schemas/TransferStatus"
                        }
                    },
                    {
                        "name": "sync",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "type",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/TransferType"
                            }
                        }
                    },
                    {
                        "name": "startDate",
                        "required": false,
                        "in": "query",
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "$ref": "#/components/schemas/Date"
                        }
                    },
                    {
                        "name": "endDate",
                        "required": false,
                        "in": "query",
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "$ref": "#/components/schemas/Date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/PageDto"
                                        },
                                        {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/TransferWithTransactionsOnlyDto"
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Transfer"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/transfers/offramp": {
            "post": {
                "operationId": "TransferController_createOfframpTransfer",
                "summary": "Create offramp transfer",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateOfframpTransferDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransferWithAccountDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Transfer"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/transfers/onramp": {
            "post": {
                "operationId": "TransferController_createOnrampTransfer",
                "summary": "Create onramp transfer",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateOnrampTransferDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransferWithAccountDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Transfer"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/transfers/wallet-withdraw": {
            "post": {
                "operationId": "TransferController_createWalletWithdraw",
                "summary": "Withdraw balance to wallet",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateWalletWithdrawTransferDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransferWithAccountDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Transfer"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/transfers/send": {
            "post": {
                "operationId": "TransferController_createSend",
                "summary": "Send payment to user using email or wallet address",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateSendTransferDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransferWithAccountDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Transfer"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/transfers/send-batch": {
            "post": {
                "operationId": "TransferController_createSendBatch",
                "summary": "Send payment to multiple users in batch",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateSendTransferBatchDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateSendTransferBatchResponseDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Transfer"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/transfers/deposit": {
            "post": {
                "operationId": "TransferController_createDepositTransfer",
                "summary": "Deposit payment to wallet using copperx gateway",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateSolanaDepositTransferDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransferWithTransactionsOnlyDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Transfer"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/transfers/bridge": {
            "post": {
                "operationId": "TransferController_createBridgeTransfer",
                "summary": "Bridge payment to wallet using copperx gateway",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateBridgeTransferDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransferWithTransactionsOnlyDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Transfer"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/transfers/balances": {
            "get": {
                "operationId": "TransferController_getBalances",
                "summary": "Get user balance on different networks",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BridgeTransferBalances"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Transfer"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/transfers/{id}": {
            "get": {
                "operationId": "TransferController_get",
                "summary": "Get transfer",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransferWithTransactionsDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Transfer"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/transactions": {
            "get": {
                "operationId": "TransactionController_findAll",
                "summary": "List of transactions",
                "parameters": [
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "Page number. Starts from 1",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of items per page",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "transferId",
                        "required": false,
                        "in": "query",
                        "description": "Transfer id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "kycId",
                        "required": false,
                        "in": "query",
                        "description": "KYC id",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/PageDto"
                                        },
                                        {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/TransactionWithAccountDto"
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Transaction"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/transactions/{id}": {
            "get": {
                "operationId": "TransactionController_get",
                "summary": "Get transaction",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransactionWithAccountDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Transaction"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/transactions/{id}/confirm-bank-transfer": {
            "post": {
                "operationId": "TransactionController_confirmBankTransfer",
                "summary": "User manually just confirm that he/she deposited money to the bank account. This does not guarantee that the money is actually deposited to the bank account.",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Transaction"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/public-pages/for-transfer/{id}/{hash}": {
            "get": {
                "operationId": "PublicPageController_getTransferPublic",
                "summary": "Get transfer",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "hash",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentPublicDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "PublicPage"
                ]
            }
        },
        "/api/routes": {
            "get": {
                "operationId": "RouteController_findAll",
                "summary": "List of available routes",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RoutesDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Route"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/deposit-accounts": {
            "get": {
                "operationId": "DepositAccountController_findAll",
                "summary": "List of deposit accounts",
                "description": "Returns the list of deposit  accounts",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/ListDto"
                                        },
                                        {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/DepositBankAccountDto"
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Deposit Account"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "post": {
                "operationId": "DepositAccountController_create",
                "summary": "Create virtual bank account",
                "description": "Creates a new virtual bank account for USDC deposits",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateVirtualAccountDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DepositBankAccountDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Deposit Account"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/deposit-accounts/{id}": {
            "get": {
                "operationId": "DepositAccountController_getAccount",
                "summary": "Get deposit account",
                "description": "Get a deposit account",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DepositBankAccountDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Deposit Account"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/payees": {
            "get": {
                "operationId": "PayeeController_findAll",
                "summary": "List of payees",
                "description": "Returns the list of payees",
                "parameters": [
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "Page number. Starts from 1",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of items per page",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "searchText",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/PageDto"
                                        },
                                        {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/PayeeDto"
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Payees"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "post": {
                "operationId": "PayeeController_create",
                "summary": "Create payee",
                "description": "Create a new payee",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreatePayeeDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PayeeDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Payees"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/payees/{id}": {
            "get": {
                "operationId": "PayeeController_get",
                "summary": "Get payee",
                "description": "Get a payee",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PayeeDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Payees"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "put": {
                "operationId": "PayeeController_update",
                "summary": "Update payee",
                "description": "Update a new payee",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdatePayeeDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PayeeDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Payees"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "delete": {
                "operationId": "PayeeController_delete",
                "summary": "Delete payee",
                "description": "Delete a new payee",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Payees"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/providers": {
            "get": {
                "operationId": "ProviderController_findAll",
                "summary": "List of providers",
                "description": "Returns the list of providers",
                "parameters": [
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "Page number. Starts from 1",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of items per page",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "providerCode",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "$ref": "#/components/schemas/ProviderCode"
                        }
                    },
                    {
                        "name": "sync",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/PageDto"
                                        },
                                        {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/ProviderDto"
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Provider"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "post": {
                "operationId": "ProviderController_create",
                "summary": "Create provider",
                "description": "Create a new provider",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateProviderDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/KycDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Provider"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/providers/{id}": {
            "get": {
                "operationId": "ProviderController_get",
                "summary": "Get provider",
                "description": "Get a provider",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/KycDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Provider"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/providers/bridge-tos-link": {
            "post": {
                "operationId": "ProviderController_getTosLink",
                "summary": "Get bridge tos link",
                "description": "Get the bridge tos link",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Provider"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/providers/submit-kyc-on-partner": {
            "post": {
                "operationId": "ProviderController_submitKycOnPartner",
                "summary": "Submit kyc on partner side",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OnboardOnPartnerAccountDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProviderDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Provider"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/quotes/offramp": {
            "post": {
                "operationId": "QuoteController_getQuote",
                "summary": "Get offramp quote",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OfframpQuoteRequestDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OfframpQuoteResponseDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Quote"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/quotes/onramp": {
            "post": {
                "operationId": "QuoteController_getOnramp",
                "summary": "Get onramp quote",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OnrampQuoteRequestDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OnrampQuoteResponseDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Quote"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/quotes/public-offramp": {
            "post": {
                "operationId": "QuoteController_getPublicQuote",
                "summary": "Get public offramp quote",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PublicOfframpQuoteRequestDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OfframpQuoteResponseDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Quote"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/transfer-schedules": {
            "get": {
                "operationId": "TransferScheduleController_findAll",
                "summary": "List of transfer schedules",
                "parameters": [
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "Page number. Starts from 1",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of items per page",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "email",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "payeeId",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "$ref": "#/components/schemas/TransferScheduleStatus"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/PageDto"
                                        },
                                        {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/TransferScheduleDto"
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Schedule"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "post": {
                "operationId": "TransferScheduleController_createTransferSchedule",
                "summary": "Create transfer schedule",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateTransferScheduleDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransferScheduleDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Schedule"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/transfer-schedules/{id}": {
            "get": {
                "operationId": "TransferScheduleController_get",
                "summary": "Get transfer schedules",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransferScheduleDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Schedule"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/transfer-schedules/{id}/deactivate": {
            "post": {
                "operationId": "TransferScheduleController_deactivateTransferSchedule",
                "summary": "Deactivate transfer schedule",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransferScheduleDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Schedule"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/points/total": {
            "get": {
                "operationId": "PointController_total",
                "summary": "Get total points",
                "parameters": [
                    {
                        "name": "email",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AllPointsTotalDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Points"
                ]
            }
        },
        "/api/points/all": {
            "get": {
                "operationId": "PointController_all",
                "summary": "Get all points",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AllPointsDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Points"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/points/offramp-transfer-points": {
            "get": {
                "operationId": "PointController_offrampTransferPoints",
                "summary": "Get offramp transfer points",
                "description": "Get offramp transfer points",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/ListDto"
                                        },
                                        {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/TransactionPointDto"
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Points"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/points/referrer-points": {
            "get": {
                "operationId": "PointController_referrerPoints",
                "summary": "Get referrer points",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/ListDto"
                                        },
                                        {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/ReferrerPointDto"
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Points"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/organization": {
            "get": {
                "operationId": "OrganizationController_getOrganizationInfo",
                "summary": "Get organization info",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrganizationDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Organization"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/organization/apply-referral-code": {
            "post": {
                "operationId": "OrganizationController_linkReferralCode",
                "summary": "Apply referral code",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ApplyReferralCodeDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Organization"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/invite-codes/validate": {
            "post": {
                "operationId": "InviteCodeController_validateCode",
                "summary": "Validate and use invite code",
                "description": "Validates and marks an invite code as used",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InviteCodeDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Invite Codes"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/invite-codes": {
            "get": {
                "operationId": "InviteCodeController_listCodes",
                "summary": "List invite codes",
                "description": "Lists all invite codes for the organization",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/ListDto"
                                        },
                                        {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/InviteCodeDto"
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Invite Codes"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/notifications/auth": {
            "post": {
                "operationId": "NotificationsController_authenticate",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NotificationAuthDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotificationAuthResponseDto"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Notifications"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/notifications/test": {
            "get": {
                "operationId": "NotificationsController_testNotifications",
                "description": "Test endpoint to send notifications",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Notifications"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/test": {
            "get": {
                "operationId": "TestController_test",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        }
    },
    "info": {
        "title": "Copperx Payout - API documentation",
        "description": "Copperx Payout - API documentation",
        "version": "v0.0.0",
        "contact": {
            "name": "Support",
            "url": "https://copperx.io",
            "email": "support@copperx.io"
        }
    },
    "tags": [],
    "servers": [
        {
            "url": "https://income-api.copperx.io",
            "description": "Default"
        }
    ],
    "components": {
        "securitySchemes": {
            "bearer": {
                "scheme": "bearer",
                "bearerFormat": "JWT",
                "type": "http"
            }
        },
        "schemas": {
            "LoginEmailOtpRequestDto": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string"
                    }
                },
                "required": [
                    "email"
                ]
            },
            "LoginEmailOtpResponseDto": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string"
                    },
                    "sid": {
                        "type": "string"
                    }
                },
                "required": [
                    "email",
                    "sid"
                ]
            },
            "ErrorDto": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "object"
                    },
                    "statusCode": {
                        "type": "number"
                    },
                    "error": {
                        "type": "string"
                    }
                },
                "required": [
                    "message",
                    "statusCode",
                    "error"
                ]
            },
            "VerifyEmailOtpRequestDto": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string"
                    },
                    "otp": {
                        "type": "string"
                    },
                    "sid": {
                        "type": "string"
                    }
                },
                "required": [
                    "email",
                    "otp",
                    "sid"
                ]
            },
            "UserRole": {
                "type": "string",
                "description": "User role",
                "enum": [
                    "owner",
                    "user",
                    "admin",
                    "member"
                ]
            },
            "UserStatus": {
                "type": "string",
                "description": "User status",
                "enum": [
                    "pending",
                    "active",
                    "suspended"
                ]
            },
            "CustomerProfileType": {
                "type": "string",
                "enum": [
                    "individual",
                    "business"
                ]
            },
            "AuthUserDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "User id"
                    },
                    "firstName": {
                        "type": "string",
                        "description": "User first name"
                    },
                    "lastName": {
                        "type": "string",
                        "description": "User last name"
                    },
                    "email": {
                        "type": "string",
                        "description": "User email"
                    },
                    "profileImage": {
                        "type": "string",
                        "description": "User profile picture"
                    },
                    "organizationId": {
                        "type": "string",
                        "description": "User organization id"
                    },
                    "role": {
                        "$ref": "#/components/schemas/UserRole"
                    },
                    "status": {
                        "$ref": "#/components/schemas/UserStatus"
                    },
                    "type": {
                        "$ref": "#/components/schemas/CustomerProfileType"
                    },
                    "relayerAddress": {
                        "type": "string"
                    },
                    "flags": {
                        "description": "User flags",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "walletAddress": {
                        "type": "string",
                        "description": "Web3auth/Copperx default evm wallet address assigned to user"
                    },
                    "walletId": {
                        "type": "string",
                        "description": "User's default wallet id"
                    },
                    "walletAccountType": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "role",
                    "status",
                    "type",
                    "relayerAddress"
                ]
            },
            "AuthenticateResponseDto": {
                "type": "object",
                "properties": {
                    "scheme": {
                        "type": "string",
                        "description": "Auth scheme"
                    },
                    "accessToken": {
                        "type": "string",
                        "description": "Access token"
                    },
                    "accessTokenId": {
                        "type": "string",
                        "description": "Access token id"
                    },
                    "expireAt": {
                        "format": "date-time",
                        "type": "string",
                        "description": "Access token expire at"
                    },
                    "user": {
                        "description": "User",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AuthUserDto"
                            }
                        ]
                    }
                },
                "required": [
                    "scheme",
                    "accessToken",
                    "accessTokenId",
                    "expireAt",
                    "user"
                ]
            },
            "Web3AuthAuthenticateDto": {
                "type": "object",
                "properties": {
                    "token": {
                        "type": "string",
                        "description": "Web3auth id token"
                    },
                    "walletAddress": {
                        "type": "string",
                        "description": "Web3auth default evm wallet address"
                    }
                },
                "required": [
                    "token"
                ]
            },
            "SuccessDto": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string"
                    },
                    "statusCode": {
                        "type": "number"
                    }
                },
                "required": [
                    "message",
                    "statusCode"
                ]
            },
            "PointsAccessDto": {
                "type": "object",
                "properties": {
                    "token": {
                        "type": "string"
                    }
                },
                "required": [
                    "token"
                ]
            },
            "UserFlag": {
                "type": "string",
                "enum": [
                    "intro",
                    "disable_offramp",
                    "only_31",
                    "third_party",
                    "virtual_account",
                    "manual_submit_kyb"
                ]
            },
            "UserFlagDto": {
                "type": "object",
                "properties": {
                    "flag": {
                        "$ref": "#/components/schemas/UserFlag"
                    }
                },
                "required": [
                    "flag"
                ]
            },
            "GoogleAuthenticateDto": {
                "type": "object",
                "properties": {}
            },
            "PageDto": {
                "type": "object",
                "properties": {
                    "page": {
                        "type": "number",
                        "example": 1,
                        "default": 1,
                        "description": "Page number. Starts from 1"
                    },
                    "limit": {
                        "type": "number",
                        "example": 10,
                        "default": 10,
                        "description": "Number of items per page"
                    },
                    "count": {
                        "type": "number",
                        "example": 1
                    },
                    "hasMore": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "page",
                    "limit",
                    "count",
                    "hasMore"
                ]
            },
            "PersonalAccessTokenDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "tokenIdentifier": {
                        "type": "string"
                    },
                    "organizationId": {
                        "type": "string"
                    },
                    "userId": {
                        "type": "string"
                    },
                    "createdAt": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "updatedAt": {
                        "format": "date-time",
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "name",
                    "tokenIdentifier",
                    "organizationId",
                    "userId",
                    "createdAt",
                    "updatedAt"
                ]
            },
            "CreatePersonalAccessTokenDto": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                },
                "required": [
                    "name"
                ]
            },
            "PersonalAccessTokenWithPlainTokenDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "tokenIdentifier": {
                        "type": "string"
                    },
                    "organizationId": {
                        "type": "string"
                    },
                    "userId": {
                        "type": "string"
                    },
                    "createdAt": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "updatedAt": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "token": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "name",
                    "tokenIdentifier",
                    "organizationId",
                    "userId",
                    "createdAt",
                    "updatedAt",
                    "token"
                ]
            },
            "UpdatePersonalAccessTokenDto": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                },
                "required": [
                    "name"
                ]
            },
            "WalletAccountType": {
                "type": "string",
                "enum": [
                    "web3_auth_copperx",
                    "safe",
                    "circle_dev",
                    "eoa",
                    "other",
                    "quantum"
                ]
            },
            "WalletDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "createdAt": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "updatedAt": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "organizationId": {
                        "type": "string"
                    },
                    "walletType": {
                        "$ref": "#/components/schemas/WalletAccountType"
                    },
                    "network": {
                        "type": "string"
                    },
                    "walletAddress": {
                        "type": "string"
                    },
                    "isDefault": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "id",
                    "organizationId",
                    "walletType"
                ]
            },
            "BalanceResponseDto": {
                "type": "object",
                "properties": {
                    "decimals": {
                        "type": "number",
                        "description": "Number of decimal places for the token",
                        "example": 6
                    },
                    "balance": {
                        "type": "string",
                        "description": "Formatted balance with proper decimal places",
                        "example": "100.50"
                    },
                    "symbol": {
                        "type": "string",
                        "description": "Token symbol",
                        "example": "USDC",
                        "enum": [
                            "USDC",
                            "USDT",
                            "DAI",
                            "ETH",
                            "USDCE",
                            "STRK"
                        ]
                    },
                    "address": {
                        "type": "string",
                        "description": "Token contract address",
                        "example": "0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174"
                    }
                },
                "required": [
                    "decimals",
                    "balance",
                    "symbol",
                    "address"
                ]
            },
            "WalletBalanceDto": {
                "type": "object",
                "properties": {
                    "walletId": {
                        "type": "string"
                    },
                    "isDefault": {
                        "type": "boolean",
                        "description": "Whether the wallet is the default wallet for the organization",
                        "example": true
                    },
                    "network": {
                        "type": "string",
                        "description": "Network of the wallet",
                        "example": "Polygon"
                    },
                    "balances": {
                        "description": "List of wallet balances",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BalanceResponseDto"
                        }
                    }
                },
                "required": [
                    "walletId",
                    "isDefault",
                    "network",
                    "balances"
                ]
            },
            "SetDefaultWalletDto": {
                "type": "object",
                "properties": {
                    "walletId": {
                        "type": "string",
                        "description": "ID of the wallet to set as default",
                        "example": "wallet_01HQ2X3NJWK8PMZD5N6R7BGDV9"
                    }
                },
                "required": [
                    "walletId"
                ]
            },
            "GenerateWalletDto": {
                "type": "object",
                "properties": {
                    "network": {
                        "type": "string",
                        "description": "Network of the wallet",
                        "example": "137"
                    }
                },
                "required": [
                    "network"
                ]
            },
            "ChainId": {
                "type": "string",
                "enum": [
                    "137",
                    "80002",
                    "1",
                    "11155111",
                    "42161",
                    "421614",
                    "8453",
                    "84532",
                    "10",
                    "11155420",
                    "56",
                    "97",
                    "1399811149",
                    "1399811150",
                    "23434",
                    "39361"
                ]
            },
            "Currency": {
                "type": "string",
                "enum": [
                    "USD",
                    "INR",
                    "AED",
                    "IDR",
                    "PKR",
                    "SGD",
                    "EUR",
                    "MYR",
                    "CAD",
                    "KYD",
                    "LBP",
                    "TRY",
                    "XCD",
                    "VND",
                    "THB",
                    "HKD",
                    "BDT",
                    "PHP",
                    "KHR",
                    "AUD",
                    "GBP",
                    "NPR",
                    "LKR",
                    "XOF",
                    "XAF",
                    "GHS",
                    "KES",
                    "MZN",
                    "TZS",
                    "UGX",
                    "NZD",
                    "KRW",
                    "MMK",
                    "JPY",
                    "BRL",
                    "CNY",
                    "USDC",
                    "USDT",
                    "DAI",
                    "ETH",
                    "USDCE",
                    "STRK"
                ]
            },
            "RecoverTokensDto": {
                "type": "object",
                "properties": {
                    "organizationId": {
                        "type": "string"
                    },
                    "chainId": {
                        "$ref": "#/components/schemas/ChainId"
                    },
                    "amount": {
                        "type": "string",
                        "format": "int64",
                        "example": "9223372036854775807"
                    },
                    "currency": {
                        "$ref": "#/components/schemas/Currency"
                    },
                    "toAccount": {
                        "type": "string"
                    }
                },
                "required": [
                    "organizationId",
                    "chainId",
                    "amount",
                    "currency"
                ]
            },
            "KycStatus": {
                "type": "string",
                "enum": [
                    "pending",
                    "initiated",
                    "inprogress",
                    "review_pending",
                    "review",
                    "provider_manual_review",
                    "manual_review",
                    "provider_on_hold",
                    "on_hold",
                    "expired",
                    "approved",
                    "rejected"
                ]
            },
            "ProviderCode": {
                "type": "string",
                "enum": [
                    "0x0",
                    "0x1",
                    "0x2",
                    "0x11",
                    "0x21",
                    "0x22",
                    "0x31",
                    "0x41",
                    "0x23",
                    "0x24",
                    "0xffff"
                ]
            },
            "KycProviderCode": {
                "type": "string",
                "enum": [
                    "sumsub",
                    "sumsub_uae",
                    "sumsub_global",
                    "hyperverge_ind",
                    "persona",
                    "manual"
                ]
            },
            "KycVerificationDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "createdAt": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "updatedAt": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "organizationId": {
                        "type": "string"
                    },
                    "kycDetailId": {
                        "type": "string"
                    },
                    "kycProviderCode": {
                        "$ref": "#/components/schemas/KycProviderCode"
                    },
                    "externalCustomerId": {
                        "type": "string"
                    },
                    "externalKycId": {
                        "type": "string"
                    },
                    "status": {
                        "$ref": "#/components/schemas/KycStatus"
                    },
                    "externalStatus": {
                        "type": "string"
                    },
                    "verifiedAt": {
                        "format": "date-time",
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "organizationId",
                    "kycDetailId",
                    "kycProviderCode",
                    "status"
                ]
            },
            "KycDocumentType": {
                "type": "string",
                "enum": [
                    "passport",
                    "aadhar_card",
                    "pan_card",
                    "driving_license",
                    "national_id",
                    "tax_id",
                    "voter_id",
                    "utility_bill",
                    "bank_statement",
                    "proof_of_address",
                    "other"
                ]
            },
            "KycDocumentVerificationStatus": {
                "type": "string",
                "enum": [
                    "pending",
                    "initiated",
                    "inprogress",
                    "review_pending",
                    "provider_manual_review",
                    "manual_review",
                    "provider_on_hold",
                    "review",
                    "on_hold",
                    "verified",
                    "rejected"
                ]
            },
            "KycDocumentDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "createdAt": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "updatedAt": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "organizationId": {
                        "type": "string"
                    },
                    "kycDetailId": {
                        "type": "string"
                    },
                    "documentType": {
                        "$ref": "#/components/schemas/KycDocumentType"
                    },
                    "status": {
                        "$ref": "#/components/schemas/KycDocumentVerificationStatus"
                    },
                    "frontFileName": {
                        "type": "string"
                    },
                    "backFileName": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "organizationId",
                    "kycDetailId",
                    "documentType"
                ]
            },
            "UBOType": {
                "type": "string",
                "enum": [
                    "owner",
                    "signer",
                    "control"
                ]
            },
            "KycDetailDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "createdAt": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "updatedAt": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "organizationId": {
                        "type": "string"
                    },
                    "kybDetailId": {
                        "type": "string"
                    },
                    "nationality": {
                        "type": "string",
                        "description": "Country alpha3 code"
                    },
                    "firstName": {
                        "type": "string"
                    },
                    "lastName": {
                        "type": "string"
                    },
                    "middleName": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "phoneNumber": {
                        "type": "string"
                    },
                    "dateOfBirth": {
                        "type": "string"
                    },
                    "addressLine1": {
                        "type": "string"
                    },
                    "addressLine2": {
                        "type": "string"
                    },
                    "city": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "postalCode": {
                        "type": "string"
                    },
                    "country": {
                        "type": "string",
                        "description": "Country alpha3 code"
                    },
                    "positionAtCompany": {
                        "type": "string"
                    },
                    "sourceOfFund": {
                        "type": "string"
                    },
                    "currentKycVerificationId": {
                        "type": "string"
                    },
                    "currentKycVerification": {
                        "$ref": "#/components/schemas/KycVerificationDto"
                    },
                    "kycDocuments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/KycDocumentDto"
                        }
                    },
                    "kycUrl": {
                        "type": "string"
                    },
                    "uboType": {
                        "$ref": "#/components/schemas/UBOType"
                    },
                    "percentageOfShares": {
                        "type": "number",
                        "example": 1
                    },
                    "joiningDate": {
                        "format": "date-time",
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "organizationId",
                    "uboType",
                    "percentageOfShares",
                    "joiningDate"
                ]
            },
            "KybVerificationDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "createdAt": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "updatedAt": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "organizationId": {
                        "type": "string"
                    },
                    "kybDetailId": {
                        "type": "string"
                    },
                    "kybProviderCode": {
                        "$ref": "#/components/schemas/KycProviderCode"
                    },
                    "externalCustomerId": {
                        "type": "string"
                    },
                    "externalKybId": {
                        "type": "string"
                    },
                    "status": {
                        "$ref": "#/components/schemas/KycStatus"
                    },
                    "externalStatus": {
                        "type": "string"
                    },
                    "verifiedAt": {
                        "format": "date-time",
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "organizationId",
                    "kybDetailId",
                    "kybProviderCode",
                    "status"
                ]
            },
            "KybDocumentType": {
                "type": "string",
                "enum": [
                    "certificate_of_incorporation",
                    "memorandum_of_association",
                    "articles_of_association",
                    "corporate_structure",
                    "director_structure",
                    "proof_of_address",
                    "authorization_document",
                    "other"
                ]
            },
            "KybDocumentDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "createdAt": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "updatedAt": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "organizationId": {
                        "type": "string"
                    },
                    "kybDetailId": {
                        "type": "string"
                    },
                    "documentType": {
                        "$ref": "#/components/schemas/KybDocumentType"
                    },
                    "status": {
                        "$ref": "#/components/schemas/KycDocumentVerificationStatus"
                    },
                    "frontFileName": {
                        "type": "string"
                    },
                    "backFileName": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "organizationId",
                    "kybDetailId",
                    "documentType"
                ]
            },
            "PurposeOfFund": {
                "type": "string",
                "enum": [
                    "business_transactions",
                    "charitable_donations",
                    "investment_purposes",
                    "payments_to_friends_or_family_abroad",
                    "payroll",
                    "personal_or_living_expenses",
                    "protect_wealth",
                    "purchase_goods_and_services",
                    "receive_payments_for_goods_and_services",
                    "tax_optimization",
                    "other"
                ]
            },
            "HighRiskActivity": {
                "type": "string",
                "enum": [
                    "marijuana_or_related_services",
                    "adult_entertainment",
                    "gambling",
                    "hold_client_funds",
                    "investment_services",
                    "lending_banking",
                    "money_services",
                    "operate_foreign_exchange_virtual_currencies_brokerage_otc",
                    "safe_deposit_box_rentals",
                    "third_party_payment_processing",
                    "weapons_firearms_and_explosives",
                    "none_of_the_above"
                ]
            },
            "KybDetailDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "createdAt": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "updatedAt": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "organizationId": {
                        "type": "string"
                    },
                    "companyName": {
                        "type": "string"
                    },
                    "companyDescription": {
                        "type": "string"
                    },
                    "website": {
                        "type": "string"
                    },
                    "incorporationDate": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "incorporationCountry": {
                        "type": "string"
                    },
                    "incorporationNumber": {
                        "type": "string"
                    },
                    "companyType": {
                        "type": "string"
                    },
                    "companyTypeOther": {
                        "type": "string"
                    },
                    "natureOfBusiness": {
                        "type": "string"
                    },
                    "natureOfBusinessOther": {
                        "type": "string"
                    },
                    "sourceOfFund": {
                        "type": "string"
                    },
                    "sourceOfFundOther": {
                        "type": "string"
                    },
                    "addressLine1": {
                        "type": "string"
                    },
                    "addressLine2": {
                        "type": "string"
                    },
                    "city": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string",
                        "description": "State/Province code (e.g., MH for Maharashtra)"
                    },
                    "postalCode": {
                        "type": "string"
                    },
                    "country": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "phoneNumber": {
                        "type": "string"
                    },
                    "currentKybVerificationId": {
                        "type": "string"
                    },
                    "currentKybVerification": {
                        "$ref": "#/components/schemas/KybVerificationDto"
                    },
                    "kybDocuments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/KybDocumentDto"
                        }
                    },
                    "kycDetails": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/KycDetailDto"
                        }
                    },
                    "sourceOfFundDescription": {
                        "type": "string"
                    },
                    "expectedMonthlyVolume": {
                        "type": "number",
                        "example": 1
                    },
                    "purposeOfFund": {
                        "$ref": "#/components/schemas/PurposeOfFund"
                    },
                    "purposeOfFundOther": {
                        "type": "string"
                    },
                    "operatesInProhibitedCountries": {
                        "type": "boolean"
                    },
                    "taxIdentificationNumber": {
                        "type": "string"
                    },
                    "highRiskActivities": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/HighRiskActivity"
                        }
                    }
                },
                "required": [
                    "id",
                    "organizationId",
                    "state"
                ]
            },
            "KycAdditionalDocumentDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "createdAt": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "updatedAt": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "organizationId": {
                        "type": "string"
                    },
                    "kycId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "fileName": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "organizationId",
                    "kycId",
                    "name"
                ]
            },
            "KycDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "createdAt": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "updatedAt": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "organizationId": {
                        "type": "string"
                    },
                    "status": {
                        "$ref": "#/components/schemas/KycStatus"
                    },
                    "type": {
                        "$ref": "#/components/schemas/CustomerProfileType"
                    },
                    "country": {
                        "type": "string"
                    },
                    "providerCode": {
                        "$ref": "#/components/schemas/ProviderCode"
                    },
                    "kycProviderCode": {
                        "$ref": "#/components/schemas/KycProviderCode"
                    },
                    "kycDetailId": {
                        "type": "string"
                    },
                    "kybDetailId": {
                        "type": "string"
                    },
                    "kycDetail": {
                        "$ref": "#/components/schemas/KycDetailDto"
                    },
                    "kybDetail": {
                        "$ref": "#/components/schemas/KybDetailDto"
                    },
                    "kycAdditionalDocuments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/KycAdditionalDocumentDto"
                        }
                    },
                    "statusUpdates": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "organizationId",
                    "status",
                    "type",
                    "providerCode"
                ]
            },
            "KycUrlDto": {
                "type": "object",
                "properties": {
                    "kycDetailId": {
                        "type": "string",
                        "description": "Kyc detail id"
                    },
                    "kycUrl": {
                        "type": "string"
                    },
                    "kycStatus": {
                        "$ref": "#/components/schemas/KycStatus"
                    },
                    "firstName": {
                        "type": "string"
                    },
                    "lastName": {
                        "type": "string"
                    },
                    "kycProviderCode": {
                        "$ref": "#/components/schemas/KycProviderCode"
                    }
                },
                "required": [
                    "kycDetailId",
                    "kycUrl",
                    "kycStatus",
                    "firstName",
                    "kycProviderCode"
                ]
            },
            "CreateKycDetailDto": {
                "type": "object",
                "properties": {
                    "nationality": {
                        "type": "string",
                        "description": "Country alpha3 code"
                    },
                    "firstName": {
                        "type": "string"
                    },
                    "lastName": {
                        "type": "string"
                    },
                    "middleName": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "sourceOfFund": {
                        "type": "string"
                    },
                    "positionAtCompany": {
                        "type": "string"
                    },
                    "uboType": {
                        "$ref": "#/components/schemas/UBOType"
                    },
                    "percentageOfShares": {
                        "type": "number",
                        "example": 1
                    },
                    "joiningDate": {
                        "format": "date-time",
                        "type": "string"
                    }
                },
                "required": [
                    "nationality",
                    "firstName",
                    "lastName",
                    "email"
                ]
            },
            "CompanyType": {
                "type": "string",
                "enum": [
                    "private_limited_company",
                    "limited_liability_company",
                    "publicly_listed_company",
                    "sole_proprietorship",
                    "partnership",
                    "corporation",
                    "trust",
                    "private_foundation",
                    "other"
                ]
            },
            "CreateKybDetailDto": {
                "type": "object",
                "properties": {
                    "companyName": {
                        "type": "string",
                        "maxLength": 501
                    },
                    "companyDescription": {
                        "type": "string",
                        "maxLength": 4001
                    },
                    "website": {
                        "type": "string"
                    },
                    "incorporationDate": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "incorporationCountry": {
                        "type": "string",
                        "description": "Country alpha3 code"
                    },
                    "incorporationNumber": {
                        "type": "string"
                    },
                    "companyType": {
                        "$ref": "#/components/schemas/CompanyType"
                    },
                    "companyTypeOther": {
                        "type": "string"
                    },
                    "taxIdentificationNumber": {
                        "type": "string"
                    },
                    "natureOfBusiness": {
                        "type": "string"
                    },
                    "natureOfBusinessOther": {
                        "type": "string"
                    },
                    "addressLine1": {
                        "type": "string"
                    },
                    "addressLine2": {
                        "type": "string"
                    },
                    "city": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string",
                        "description": "State/Province code (e.g., MH for Maharashtra)"
                    },
                    "postalCode": {
                        "type": "string"
                    },
                    "country": {
                        "type": "string",
                        "description": "Country alpha3 code"
                    },
                    "phoneNumber": {
                        "type": "string",
                        "description": "Phone number with country code without + sign"
                    }
                },
                "required": [
                    "companyName",
                    "companyDescription",
                    "website",
                    "incorporationDate",
                    "incorporationCountry",
                    "incorporationNumber",
                    "companyType",
                    "natureOfBusiness",
                    "addressLine1",
                    "city",
                    "state",
                    "postalCode",
                    "country"
                ]
            },
            "CreateKycDto": {
                "type": "object",
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/CustomerProfileType"
                    },
                    "country": {
                        "type": "string",
                        "description": "Country alpha3 code"
                    },
                    "kycDetail": {
                        "$ref": "#/components/schemas/CreateKycDetailDto"
                    },
                    "kybDetail": {
                        "$ref": "#/components/schemas/CreateKybDetailDto"
                    }
                },
                "required": [
                    "type",
                    "country"
                ]
            },
            "CreateKycWithFileDto": {
                "type": "object",
                "properties": {
                    "form": {
                        "$ref": "#/components/schemas/CreateKycDto"
                    },
                    "panCardImage": {
                        "type": "string",
                        "format": "binary",
                        "description": "Pan card image"
                    }
                },
                "required": [
                    "form"
                ]
            },
            "KycSourceOfFund": {
                "type": "string",
                "enum": [
                    "business_revenue",
                    "investment_income",
                    "grants_and_subsidies",
                    "savings",
                    "business_loans",
                    "equity_funding",
                    "grants",
                    "investment_proceeds",
                    "legal_settlement_tax_refund",
                    "pension_retirement",
                    "sale_of_assets",
                    "third_party_funds",
                    "other"
                ]
            },
            "KybAdditionalInfoDto": {
                "type": "object",
                "properties": {
                    "sourceOfFund": {
                        "$ref": "#/components/schemas/KycSourceOfFund"
                    },
                    "sourceOfFundOther": {
                        "type": "string"
                    },
                    "purposeOfFund": {
                        "$ref": "#/components/schemas/PurposeOfFund"
                    },
                    "purposeOfFundOther": {
                        "type": "string"
                    },
                    "operatesInProhibitedCountries": {
                        "type": "boolean"
                    },
                    "sourceOfFundDescription": {
                        "type": "string"
                    },
                    "expectedMonthlyVolume": {
                        "type": "number",
                        "example": 1
                    }
                },
                "required": [
                    "sourceOfFund",
                    "purposeOfFund",
                    "operatesInProhibitedCountries",
                    "expectedMonthlyVolume"
                ]
            },
            "UploadKybDocumentFormDto": {
                "type": "object",
                "properties": {
                    "documentType": {
                        "$ref": "#/components/schemas/KybDocumentType"
                    }
                },
                "required": [
                    "documentType"
                ]
            },
            "UploadKybDocumentDto": {
                "type": "object",
                "properties": {
                    "form": {
                        "$ref": "#/components/schemas/UploadKybDocumentFormDto"
                    },
                    "file": {
                        "type": "string",
                        "format": "binary",
                        "description": "Document"
                    }
                },
                "required": [
                    "form",
                    "file"
                ]
            },
            "CreateKycDetailWithFileDto": {
                "type": "object",
                "properties": {
                    "form": {
                        "$ref": "#/components/schemas/CreateKycDetailDto"
                    },
                    "panCardImage": {
                        "type": "string",
                        "format": "binary",
                        "description": "Pan card image"
                    }
                },
                "required": [
                    "form"
                ]
            },
            "UpdateKycDetailDto": {
                "type": "object",
                "properties": {
                    "nationality": {
                        "type": "string",
                        "description": "Country alpha3 code"
                    },
                    "firstName": {
                        "type": "string"
                    },
                    "lastName": {
                        "type": "string"
                    },
                    "middleName": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "sourceOfFund": {
                        "type": "string"
                    },
                    "positionAtCompany": {
                        "type": "string"
                    }
                }
            },
            "UpdateKycDetailWithFileDto": {
                "type": "object",
                "properties": {
                    "form": {
                        "$ref": "#/components/schemas/UpdateKycDetailDto"
                    },
                    "panCardImage": {
                        "type": "string",
                        "format": "binary",
                        "description": "Pan card image"
                    }
                }
            },
            "UpdateKycDto": {
                "type": "object",
                "properties": {
                    "country": {
                        "type": "string",
                        "description": "Country alpha3 code"
                    },
                    "kybDetail": {
                        "$ref": "#/components/schemas/CreateKybDetailDto"
                    }
                }
            },
            "StateResponseDto": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "required": [
                    "code",
                    "name"
                ]
            },
            "ListDto": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                },
                "required": [
                    "data"
                ]
            },
            "AccountType": {
                "type": "string",
                "enum": [
                    "web3_wallet",
                    "bank_account"
                ]
            },
            "TransferAccountType": {
                "type": "string",
                "description": "The bank transfer method used for this account by default. if not sure then leave empty or set Bank transfer",
                "enum": [
                    "web3_wallet",
                    "bank_ach",
                    "bank_ach_push",
                    "bank_wire",
                    "bank_transfer",
                    "bank_ifsc",
                    "bank_iban"
                ]
            },
            "Country": {
                "type": "string",
                "enum": [
                    "usa",
                    "ind",
                    "are",
                    "idn",
                    "pak",
                    "sgp",
                    "esp",
                    "can",
                    "cym",
                    "lbn",
                    "mys",
                    "pan",
                    "tur",
                    "vct",
                    "vgb",
                    "vnm",
                    "bel",
                    "tha",
                    "hkg",
                    "aut",
                    "hrv",
                    "cyp",
                    "est",
                    "fin",
                    "fra",
                    "gre",
                    "irl",
                    "ita",
                    "lva",
                    "ltu",
                    "lux",
                    "mlt",
                    "nld",
                    "prt",
                    "svk",
                    "svn",
                    "deu",
                    "bgd",
                    "phl",
                    "khm",
                    "aus",
                    "gbr",
                    "npl",
                    "lka",
                    "ben",
                    "cmr",
                    "gha",
                    "ken",
                    "moz",
                    "sen",
                    "tza",
                    "uga",
                    "nzl",
                    "kor",
                    "mmr",
                    "jpn",
                    "bra",
                    "chn",
                    "none"
                ]
            },
            "BankAccountType": {
                "type": "string",
                "description": "This can be savings or checking",
                "enum": [
                    "savings",
                    "checking"
                ]
            },
            "BankAccountDto": {
                "type": "object",
                "properties": {
                    "bankName": {
                        "type": "string",
                        "description": "This can be bank name or bank branch name"
                    },
                    "bankAddress": {
                        "type": "string",
                        "description": "This can be the bank location or branch address"
                    },
                    "method": {
                        "$ref": "#/components/schemas/TransferAccountType"
                    },
                    "bankAccountType": {
                        "$ref": "#/components/schemas/BankAccountType"
                    },
                    "bankRoutingNumber": {
                        "type": "string",
                        "description": "This can be IFSC or internal routing number for domestic\\n     or international transfers respectively. SWIFT code for international transfers"
                    },
                    "bankAccountNumber": {
                        "type": "string",
                        "description": "This can be IBAN or account number for domestic"
                    },
                    "bankBeneficiaryName": {
                        "type": "string",
                        "description": "This can be the name of the account holder"
                    },
                    "swiftCode": {
                        "type": "string",
                        "description": "This can be SWIFT/BIC code for international transfers"
                    }
                }
            },
            "AccountStatus": {
                "type": "string",
                "enum": [
                    "pending",
                    "initiated",
                    "inprogress",
                    "review_pending",
                    "review",
                    "manual_review",
                    "on_hold",
                    "verified",
                    "rejected"
                ]
            },
            "AccountProviderSlimDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "createdAt": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "updatedAt": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "accountId": {
                        "type": "string"
                    },
                    "providerId": {
                        "type": "string"
                    },
                    "status": {
                        "$ref": "#/components/schemas/AccountStatus"
                    },
                    "supportRemittance": {
                        "type": "boolean"
                    },
                    "providerCode": {
                        "$ref": "#/components/schemas/ProviderCode"
                    }
                },
                "required": [
                    "id",
                    "accountId",
                    "providerId",
                    "status"
                ]
            },
            "AccountDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "createdAt": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "updatedAt": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "organizationId": {
                        "type": "string"
                    },
                    "type": {
                        "$ref": "#/components/schemas/AccountType"
                    },
                    "walletAccountType": {
                        "$ref": "#/components/schemas/WalletAccountType"
                    },
                    "method": {
                        "$ref": "#/components/schemas/TransferAccountType"
                    },
                    "country": {
                        "$ref": "#/components/schemas/Country"
                    },
                    "network": {
                        "type": "string"
                    },
                    "walletAddress": {
                        "type": "string"
                    },
                    "isDefault": {
                        "type": "boolean"
                    },
                    "bankAccount": {
                        "$ref": "#/components/schemas/BankAccountDto"
                    },
                    "accountKycs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AccountProviderSlimDto"
                        }
                    },
                    "status": {
                        "$ref": "#/components/schemas/AccountStatus"
                    }
                },
                "required": [
                    "id",
                    "organizationId",
                    "type",
                    "walletAccountType"
                ]
            },
            "CreateAccountDto": {
                "type": "object",
                "properties": {
                    "country": {
                        "$ref": "#/components/schemas/Country"
                    },
                    "network": {
                        "type": "string"
                    },
                    "walletAddress": {
                        "type": "string"
                    },
                    "isDefault": {
                        "type": "boolean"
                    },
                    "bankAccount": {
                        "$ref": "#/components/schemas/BankAccountDto"
                    },
                    "providerId": {
                        "type": "string",
                        "description": "Link account to given Provider automatically for validation"
                    }
                }
            },
            "SubmitPermitDto": {
                "type": "object",
                "properties": {
                    "signature": {
                        "type": "string"
                    },
                    "args": {
                        "type": "string"
                    },
                    "argsHash": {
                        "type": "string"
                    }
                },
                "required": [
                    "signature",
                    "args",
                    "argsHash"
                ]
            },
            "SubmitPermitResponseDto": {
                "type": "object",
                "properties": {
                    "hash": {
                        "type": "string"
                    }
                },
                "required": [
                    "hash"
                ]
            },
            "TransferStatus": {
                "type": "string",
                "enum": [
                    "pending",
                    "initiated",
                    "processing",
                    "success",
                    "canceled",
                    "failed",
                    "refunded"
                ]
            },
            "CustomerDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "createdAt": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "updatedAt": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "businessName": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string",
                        "toLowerCase": true
                    },
                    "country": {
                        "type": "string"
                    }
                },
                "required": [
                    "id"
                ]
            },
            "TransferType": {
                "type": "string",
                "enum": [
                    "send",
                    "receive",
                    "withdraw",
                    "deposit",
                    "bridge",
                    "bank_deposit"
                ]
            },
            "PurposeCode": {
                "type": "string",
                "enum": [
                    "self",
                    "salary",
                    "gift",
                    "income",
                    "saving",
                    "education_support",
                    "family",
                    "home_improvement",
                    "reimbursement"
                ]
            },
            "SourceOfFunds": {
                "type": "string",
                "enum": [
                    "salary",
                    "savings",
                    "lottery",
                    "investment",
                    "loan",
                    "business_income",
                    "others"
                ]
            },
            "RecipientRelationship": {
                "type": "string",
                "enum": [
                    "self",
                    "spouse",
                    "son",
                    "daughter",
                    "father",
                    "mother",
                    "other"
                ]
            },
            "TransferMode": {
                "type": "string",
                "enum": [
                    "on_ramp",
                    "off_ramp",
                    "remittance",
                    "on_chain"
                ]
            },
            "TransactionType": {
                "type": "string",
                "enum": [
                    "send",
                    "receive",
                    "withdraw",
                    "internal",
                    "deposit",
                    "bridge"
                ]
            },
            "TransactionStatus": {
                "type": "string",
                "enum": [
                    "pending",
                    "initiated",
                    "processing",
                    "awaiting_funds",
                    "funds_received",
                    "payment_submitted",
                    "waiting_for_payee_kyc",
                    "success",
                    "canceled",
                    "failed"
                ]
            },
            "TransferAccountDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "createdAt": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "updatedAt": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "type": {
                        "$ref": "#/components/schemas/TransferAccountType"
                    },
                    "country": {
                        "$ref": "#/components/schemas/Country"
                    },
                    "network": {
                        "type": "string"
                    },
                    "accountId": {
                        "type": "string"
                    },
                    "walletAddress": {
                        "type": "string"
                    },
                    "bankName": {
                        "type": "string"
                    },
                    "bankAddress": {
                        "type": "string"
                    },
                    "bankRoutingNumber": {
                        "type": "string"
                    },
                    "bankAccountNumber": {
                        "type": "string"
                    },
                    "bankDepositMessage": {
                        "type": "string"
                    },
                    "wireMessage": {
                        "type": "string"
                    },
                    "payeeEmail": {
                        "type": "string",
                        "nullable": true
                    },
                    "payeeOrganizationId": {
                        "type": "string",
                        "nullable": true
                    },
                    "payeeId": {
                        "type": "string",
                        "nullable": true
                    },
                    "payeeDisplayName": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "required": [
                    "id",
                    "type"
                ]
            },
            "TransactionDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "createdAt": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "updatedAt": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "organizationId": {
                        "type": "string"
                    },
                    "type": {
                        "$ref": "#/components/schemas/TransactionType"
                    },
                    "providerCode": {
                        "$ref": "#/components/schemas/ProviderCode"
                    },
                    "kycId": {
                        "type": "string"
                    },
                    "transferId": {
                        "type": "string"
                    },
                    "status": {
                        "$ref": "#/components/schemas/TransactionStatus"
                    },
                    "externalStatus": {
                        "type": "string"
                    },
                    "fromAccountId": {
                        "type": "string"
                    },
                    "toAccountId": {
                        "type": "string"
                    },
                    "fromAmount": {
                        "type": "string",
                        "format": "int64",
                        "example": "9223372036854775807"
                    },
                    "fromCurrency": {
                        "$ref": "#/components/schemas/Currency"
                    },
                    "toAmount": {
                        "type": "string",
                        "format": "int64",
                        "example": "9223372036854775807"
                    },
                    "toCurrency": {
                        "$ref": "#/components/schemas/Currency"
                    },
                    "totalFee": {
                        "type": "string",
                        "format": "int64",
                        "example": "9223372036854775807"
                    },
                    "feeCurrency": {
                        "$ref": "#/components/schemas/Currency"
                    },
                    "transactionHash": {
                        "type": "string"
                    },
                    "depositAccount": {
                        "$ref": "#/components/schemas/TransferAccountDto"
                    },
                    "externalTransactionId": {
                        "type": "string"
                    },
                    "externalCustomerId": {
                        "type": "string"
                    },
                    "depositUrl": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "organizationId",
                    "type",
                    "providerCode",
                    "status",
                    "fromCurrency",
                    "toCurrency",
                    "feeCurrency"
                ]
            },
            "TransferWithTransactionsOnlyDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "createdAt": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "updatedAt": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "organizationId": {
                        "type": "string"
                    },
                    "status": {
                        "$ref": "#/components/schemas/TransferStatus"
                    },
                    "customerId": {
                        "type": "string"
                    },
                    "customer": {
                        "$ref": "#/components/schemas/CustomerDto"
                    },
                    "type": {
                        "$ref": "#/components/schemas/TransferType"
                    },
                    "sourceCountry": {
                        "$ref": "#/components/schemas/Country"
                    },
                    "destinationCountry": {
                        "$ref": "#/components/schemas/Country"
                    },
                    "destinationCurrency": {
                        "$ref": "#/components/schemas/Currency"
                    },
                    "amount": {
                        "type": "string",
                        "format": "int64",
                        "example": "9223372036854775807",
                        "minimum": 100000000,
                        "maximum": 5000000000000
                    },
                    "currency": {
                        "$ref": "#/components/schemas/Currency"
                    },
                    "amountSubtotal": {
                        "type": "string",
                        "format": "int64",
                        "example": "9223372036854775807"
                    },
                    "totalFee": {
                        "type": "string",
                        "format": "int64",
                        "example": "9223372036854775807"
                    },
                    "feePercentage": {
                        "type": "string"
                    },
                    "feeCurrency": {
                        "$ref": "#/components/schemas/Currency"
                    },
                    "invoiceNumber": {
                        "type": "string"
                    },
                    "invoiceUrl": {
                        "type": "string"
                    },
                    "sourceOfFundsFile": {
                        "type": "string"
                    },
                    "note": {
                        "type": "string"
                    },
                    "purposeCode": {
                        "$ref": "#/components/schemas/PurposeCode"
                    },
                    "sourceOfFunds": {
                        "$ref": "#/components/schemas/SourceOfFunds"
                    },
                    "recipientRelationship": {
                        "$ref": "#/components/schemas/RecipientRelationship"
                    },
                    "sourceAccountId": {
                        "type": "string"
                    },
                    "destinationAccountId": {
                        "type": "string"
                    },
                    "paymentUrl": {
                        "type": "string"
                    },
                    "mode": {
                        "$ref": "#/components/schemas/TransferMode"
                    },
                    "isThirdPartyPayment": {
                        "type": "boolean"
                    },
                    "transactions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TransactionDto"
                        }
                    },
                    "destinationAccount": {
                        "$ref": "#/components/schemas/TransferAccountDto"
                    },
                    "sourceAccount": {
                        "$ref": "#/components/schemas/TransferAccountDto"
                    },
                    "senderDisplayName": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "organizationId",
                    "status",
                    "type",
                    "sourceCountry",
                    "destinationCountry",
                    "amount",
                    "currency",
                    "isThirdPartyPayment"
                ]
            },
            "CustomerDataDto": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "businessName": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string",
                        "toLowerCase": true
                    },
                    "country": {
                        "type": "string"
                    }
                }
            },
            "CreateOfframpTransferDto": {
                "type": "object",
                "properties": {
                    "invoiceNumber": {
                        "type": "string"
                    },
                    "invoiceUrl": {
                        "type": "string"
                    },
                    "purposeCode": {
                        "$ref": "#/components/schemas/PurposeCode"
                    },
                    "sourceOfFunds": {
                        "$ref": "#/components/schemas/SourceOfFunds"
                    },
                    "recipientRelationship": {
                        "$ref": "#/components/schemas/RecipientRelationship"
                    },
                    "quotePayload": {
                        "type": "string"
                    },
                    "quoteSignature": {
                        "type": "string"
                    },
                    "preferredWalletId": {
                        "type": "string"
                    },
                    "customerData": {
                        "$ref": "#/components/schemas/CustomerDataDto"
                    },
                    "sourceOfFundsFile": {
                        "type": "string",
                        "format": "binary",
                        "description": "Document"
                    },
                    "note": {
                        "type": "string"
                    }
                },
                "required": [
                    "quotePayload",
                    "quoteSignature"
                ]
            },
            "TransferWithAccountDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "createdAt": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "updatedAt": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "organizationId": {
                        "type": "string"
                    },
                    "status": {
                        "$ref": "#/components/schemas/TransferStatus"
                    },
                    "customerId": {
                        "type": "string"
                    },
                    "customer": {
                        "$ref": "#/components/schemas/CustomerDto"
                    },
                    "type": {
                        "$ref": "#/components/schemas/TransferType"
                    },
                    "sourceCountry": {
                        "$ref": "#/components/schemas/Country"
                    },
                    "destinationCountry": {
                        "$ref": "#/components/schemas/Country"
                    },
                    "destinationCurrency": {
                        "$ref": "#/components/schemas/Currency"
                    },
                    "amount": {
                        "type": "string",
                        "format": "int64",
                        "example": "9223372036854775807",
                        "minimum": 100000000,
                        "maximum": 5000000000000
                    },
                    "currency": {
                        "$ref": "#/components/schemas/Currency"
                    },
                    "amountSubtotal": {
                        "type": "string",
                        "format": "int64",
                        "example": "9223372036854775807"
                    },
                    "totalFee": {
                        "type": "string",
                        "format": "int64",
                        "example": "9223372036854775807"
                    },
                    "feePercentage": {
                        "type": "string"
                    },
                    "feeCurrency": {
                        "$ref": "#/components/schemas/Currency"
                    },
                    "invoiceNumber": {
                        "type": "string"
                    },
                    "invoiceUrl": {
                        "type": "string"
                    },
                    "sourceOfFundsFile": {
                        "type": "string"
                    },
                    "note": {
                        "type": "string"
                    },
                    "purposeCode": {
                        "$ref": "#/components/schemas/PurposeCode"
                    },
                    "sourceOfFunds": {
                        "$ref": "#/components/schemas/SourceOfFunds"
                    },
                    "recipientRelationship": {
                        "$ref": "#/components/schemas/RecipientRelationship"
                    },
                    "sourceAccountId": {
                        "type": "string"
                    },
                    "destinationAccountId": {
                        "type": "string"
                    },
                    "paymentUrl": {
                        "type": "string"
                    },
                    "mode": {
                        "$ref": "#/components/schemas/TransferMode"
                    },
                    "isThirdPartyPayment": {
                        "type": "boolean"
                    },
                    "sourceAccount": {
                        "$ref": "#/components/schemas/TransferAccountDto"
                    },
                    "destinationAccount": {
                        "$ref": "#/components/schemas/TransferAccountDto"
                    },
                    "senderDisplayName": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "organizationId",
                    "status",
                    "type",
                    "sourceCountry",
                    "destinationCountry",
                    "amount",
                    "currency",
                    "isThirdPartyPayment"
                ]
            },
            "CreateOnrampTransferDto": {
                "type": "object",
                "properties": {
                    "invoiceNumber": {
                        "type": "string"
                    },
                    "invoiceUrl": {
                        "type": "string"
                    },
                    "purposeCode": {
                        "$ref": "#/components/schemas/PurposeCode"
                    },
                    "sourceOfFunds": {
                        "$ref": "#/components/schemas/SourceOfFunds"
                    },
                    "recipientRelationship": {
                        "$ref": "#/components/schemas/RecipientRelationship"
                    },
                    "quotePayload": {
                        "type": "string"
                    },
                    "quoteSignature": {
                        "type": "string"
                    },
                    "preferredWalletId": {
                        "type": "string"
                    },
                    "customerData": {
                        "$ref": "#/components/schemas/CustomerDataDto"
                    }
                },
                "required": [
                    "quotePayload",
                    "quoteSignature"
                ]
            },
            "CreateWalletWithdrawTransferDto": {
                "type": "object",
                "properties": {
                    "walletAddress": {
                        "type": "string"
                    },
                    "amount": {
                        "type": "string",
                        "format": "int64",
                        "example": "9223372036854775807",
                        "minimum": 100000000,
                        "maximum": 5000000000000
                    },
                    "purposeCode": {
                        "$ref": "#/components/schemas/PurposeCode"
                    },
                    "currency": {
                        "$ref": "#/components/schemas/Currency"
                    }
                },
                "required": [
                    "walletAddress",
                    "amount",
                    "purposeCode"
                ]
            },
            "CreateSendTransferDto": {
                "type": "object",
                "properties": {
                    "walletAddress": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "payeeId": {
                        "type": "string"
                    },
                    "amount": {
                        "type": "string",
                        "format": "int64",
                        "example": "9223372036854775807",
                        "minimum": 100000000,
                        "maximum": 5000000000000
                    },
                    "purposeCode": {
                        "$ref": "#/components/schemas/PurposeCode"
                    },
                    "currency": {
                        "$ref": "#/components/schemas/Currency"
                    }
                },
                "required": [
                    "amount",
                    "purposeCode"
                ]
            },
            "CreateSendTransferBatchSingleRequestDto": {
                "type": "object",
                "properties": {
                    "requestId": {
                        "type": "string"
                    },
                    "request": {
                        "$ref": "#/components/schemas/CreateSendTransferDto"
                    }
                },
                "required": [
                    "requestId",
                    "request"
                ]
            },
            "CreateSendTransferBatchDto": {
                "type": "object",
                "properties": {
                    "requests": {
                        "validation": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CreateSendTransferBatchSingleRequestDto"
                        }
                    }
                },
                "required": [
                    "requests"
                ]
            },
            "TransferDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "createdAt": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "updatedAt": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "organizationId": {
                        "type": "string"
                    },
                    "status": {
                        "$ref": "#/components/schemas/TransferStatus"
                    },
                    "customerId": {
                        "type": "string"
                    },
                    "customer": {
                        "$ref": "#/components/schemas/CustomerDto"
                    },
                    "type": {
                        "$ref": "#/components/schemas/TransferType"
                    },
                    "sourceCountry": {
                        "$ref": "#/components/schemas/Country"
                    },
                    "destinationCountry": {
                        "$ref": "#/components/schemas/Country"
                    },
                    "destinationCurrency": {
                        "$ref": "#/components/schemas/Currency"
                    },
                    "amount": {
                        "type": "string",
                        "format": "int64",
                        "example": "9223372036854775807",
                        "minimum": 100000000,
                        "maximum": 5000000000000
                    },
                    "currency": {
                        "$ref": "#/components/schemas/Currency"
                    },
                    "amountSubtotal": {
                        "type": "string",
                        "format": "int64",
                        "example": "9223372036854775807"
                    },
                    "totalFee": {
                        "type": "string",
                        "format": "int64",
                        "example": "9223372036854775807"
                    },
                    "feePercentage": {
                        "type": "string"
                    },
                    "feeCurrency": {
                        "$ref": "#/components/schemas/Currency"
                    },
                    "invoiceNumber": {
                        "type": "string"
                    },
                    "invoiceUrl": {
                        "type": "string"
                    },
                    "sourceOfFundsFile": {
                        "type": "string"
                    },
                    "note": {
                        "type": "string"
                    },
                    "purposeCode": {
                        "$ref": "#/components/schemas/PurposeCode"
                    },
                    "sourceOfFunds": {
                        "$ref": "#/components/schemas/SourceOfFunds"
                    },
                    "recipientRelationship": {
                        "$ref": "#/components/schemas/RecipientRelationship"
                    },
                    "sourceAccountId": {
                        "type": "string"
                    },
                    "destinationAccountId": {
                        "type": "string"
                    },
                    "paymentUrl": {
                        "type": "string"
                    },
                    "mode": {
                        "$ref": "#/components/schemas/TransferMode"
                    },
                    "isThirdPartyPayment": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "id",
                    "organizationId",
                    "status",
                    "type",
                    "sourceCountry",
                    "destinationCountry",
                    "amount",
                    "currency",
                    "isThirdPartyPayment"
                ]
            },
            "CreateSendTransferBatchSingleResponseDto": {
                "type": "object",
                "properties": {
                    "requestId": {
                        "type": "string"
                    },
                    "request": {
                        "$ref": "#/components/schemas/CreateSendTransferDto"
                    },
                    "response": {
                        "$ref": "#/components/schemas/TransferDto"
                    },
                    "error": {
                        "$ref": "#/components/schemas/ErrorDto"
                    }
                },
                "required": [
                    "requestId",
                    "request",
                    "response"
                ]
            },
            "CreateSendTransferBatchResponseDto": {
                "type": "object",
                "properties": {
                    "responses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CreateSendTransferBatchSingleResponseDto"
                        }
                    }
                },
                "required": [
                    "responses"
                ]
            },
            "CreateSolanaDepositTransferDto": {
                "type": "object",
                "properties": {
                    "amount": {
                        "type": "string",
                        "format": "int64",
                        "example": "9223372036854775807",
                        "minimum": 100000000,
                        "maximum": 1500000000000
                    },
                    "sourceOfFunds": {
                        "$ref": "#/components/schemas/SourceOfFunds"
                    },
                    "depositChainId": {
                        "type": "number",
                        "example": 1
                    }
                },
                "required": [
                    "amount"
                ]
            },
            "CreateBridgeTransferDto": {
                "type": "object",
                "properties": {
                    "sourceNetwork": {
                        "$ref": "#/components/schemas/ChainId"
                    },
                    "amount": {
                        "type": "string",
                        "format": "int64",
                        "example": "9223372036854775807"
                    },
                    "sourceOfFunds": {
                        "$ref": "#/components/schemas/SourceOfFunds"
                    }
                },
                "required": [
                    "sourceNetwork",
                    "amount"
                ]
            },
            "BridgeTransferBalance": {
                "type": "object",
                "properties": {
                    "chainId": {
                        "$ref": "#/components/schemas/ChainId"
                    },
                    "balance": {
                        "type": "string",
                        "format": "int64",
                        "example": "9223372036854775807"
                    }
                },
                "required": [
                    "chainId",
                    "balance"
                ]
            },
            "BridgeTransferBalances": {
                "type": "object",
                "properties": {
                    "balances": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BridgeTransferBalance"
                        }
                    }
                },
                "required": [
                    "balances"
                ]
            },
            "TransferWithTransactionsDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "createdAt": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "updatedAt": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "organizationId": {
                        "type": "string"
                    },
                    "status": {
                        "$ref": "#/components/schemas/TransferStatus"
                    },
                    "customerId": {
                        "type": "string"
                    },
                    "customer": {
                        "$ref": "#/components/schemas/CustomerDto"
                    },
                    "type": {
                        "$ref": "#/components/schemas/TransferType"
                    },
                    "sourceCountry": {
                        "$ref": "#/components/schemas/Country"
                    },
                    "destinationCountry": {
                        "$ref": "#/components/schemas/Country"
                    },
                    "destinationCurrency": {
                        "$ref": "#/components/schemas/Currency"
                    },
                    "amount": {
                        "type": "string",
                        "format": "int64",
                        "example": "9223372036854775807",
                        "minimum": 100000000,
                        "maximum": 5000000000000
                    },
                    "currency": {
                        "$ref": "#/components/schemas/Currency"
                    },
                    "amountSubtotal": {
                        "type": "string",
                        "format": "int64",
                        "example": "9223372036854775807"
                    },
                    "totalFee": {
                        "type": "string",
                        "format": "int64",
                        "example": "9223372036854775807"
                    },
                    "feePercentage": {
                        "type": "string"
                    },
                    "feeCurrency": {
                        "$ref": "#/components/schemas/Currency"
                    },
                    "invoiceNumber": {
                        "type": "string"
                    },
                    "invoiceUrl": {
                        "type": "string"
                    },
                    "sourceOfFundsFile": {
                        "type": "string"
                    },
                    "note": {
                        "type": "string"
                    },
                    "purposeCode": {
                        "$ref": "#/components/schemas/PurposeCode"
                    },
                    "sourceOfFunds": {
                        "$ref": "#/components/schemas/SourceOfFunds"
                    },
                    "recipientRelationship": {
                        "$ref": "#/components/schemas/RecipientRelationship"
                    },
                    "sourceAccountId": {
                        "type": "string"
                    },
                    "destinationAccountId": {
                        "type": "string"
                    },
                    "paymentUrl": {
                        "type": "string"
                    },
                    "mode": {
                        "$ref": "#/components/schemas/TransferMode"
                    },
                    "isThirdPartyPayment": {
                        "type": "boolean"
                    },
                    "sourceAccount": {
                        "$ref": "#/components/schemas/TransferAccountDto"
                    },
                    "destinationAccount": {
                        "$ref": "#/components/schemas/TransferAccountDto"
                    },
                    "senderDisplayName": {
                        "type": "string"
                    },
                    "transactions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TransactionDto"
                        }
                    }
                },
                "required": [
                    "id",
                    "organizationId",
                    "status",
                    "type",
                    "sourceCountry",
                    "destinationCountry",
                    "amount",
                    "currency",
                    "isThirdPartyPayment"
                ]
            },
            "TransactionWithAccountDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "createdAt": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "updatedAt": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "organizationId": {
                        "type": "string"
                    },
                    "type": {
                        "$ref": "#/components/schemas/TransactionType"
                    },
                    "providerCode": {
                        "$ref": "#/components/schemas/ProviderCode"
                    },
                    "kycId": {
                        "type": "string"
                    },
                    "transferId": {
                        "type": "string"
                    },
                    "status": {
                        "$ref": "#/components/schemas/TransactionStatus"
                    },
                    "externalStatus": {
                        "type": "string"
                    },
                    "fromAccountId": {
                        "type": "string"
                    },
                    "toAccountId": {
                        "type": "string"
                    },
                    "fromAmount": {
                        "type": "string",
                        "format": "int64",
                        "example": "9223372036854775807"
                    },
                    "fromCurrency": {
                        "$ref": "#/components/schemas/Currency"
                    },
                    "toAmount": {
                        "type": "string",
                        "format": "int64",
                        "example": "9223372036854775807"
                    },
                    "toCurrency": {
                        "$ref": "#/components/schemas/Currency"
                    },
                    "totalFee": {
                        "type": "string",
                        "format": "int64",
                        "example": "9223372036854775807"
                    },
                    "feeCurrency": {
                        "$ref": "#/components/schemas/Currency"
                    },
                    "transactionHash": {
                        "type": "string"
                    },
                    "depositAccount": {
                        "$ref": "#/components/schemas/TransferAccountDto"
                    },
                    "externalTransactionId": {
                        "type": "string"
                    },
                    "externalCustomerId": {
                        "type": "string"
                    },
                    "depositUrl": {
                        "type": "string"
                    },
                    "fromAccount": {
                        "$ref": "#/components/schemas/TransferAccountDto"
                    },
                    "toAccount": {
                        "$ref": "#/components/schemas/TransferAccountDto"
                    }
                },
                "required": [
                    "id",
                    "organizationId",
                    "type",
                    "providerCode",
                    "status",
                    "fromCurrency",
                    "toCurrency",
                    "feeCurrency"
                ]
            },
            "PaymentAccountPublicDto": {
                "type": "object",
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/TransferAccountType"
                    },
                    "country": {
                        "$ref": "#/components/schemas/Country"
                    },
                    "network": {
                        "type": "string"
                    },
                    "walletAddress": {
                        "type": "string"
                    },
                    "bankName": {
                        "type": "string"
                    },
                    "bankAddress": {
                        "type": "string"
                    },
                    "bankRoutingNumber": {
                        "type": "string"
                    },
                    "bankAccountNumber": {
                        "type": "string"
                    },
                    "bankDepositMessage": {
                        "type": "string"
                    },
                    "wireMessage": {
                        "type": "string"
                    },
                    "amount": {
                        "type": "string"
                    },
                    "currency": {
                        "type": "string"
                    }
                },
                "required": [
                    "type",
                    "amount",
                    "currency"
                ]
            },
            "PublicCustomerProfileDto": {
                "type": "object",
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/CustomerProfileType"
                    },
                    "firstName": {
                        "type": "string"
                    },
                    "lastName": {
                        "type": "string"
                    },
                    "businessName": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string",
                        "toLowerCase": true
                    },
                    "receiverName": {
                        "type": "string"
                    }
                },
                "required": [
                    "type",
                    "receiverName"
                ]
            },
            "PaymentPublicDto": {
                "type": "object",
                "properties": {
                    "status": {
                        "$ref": "#/components/schemas/TransferStatus"
                    },
                    "customer": {
                        "$ref": "#/components/schemas/CustomerDto"
                    },
                    "type": {
                        "$ref": "#/components/schemas/TransferType"
                    },
                    "amount": {
                        "type": "string",
                        "format": "int64",
                        "example": "9223372036854775807",
                        "minimum": 100000000,
                        "maximum": 5000000000000
                    },
                    "currency": {
                        "$ref": "#/components/schemas/Currency"
                    },
                    "invoiceNumber": {
                        "type": "string"
                    },
                    "invoiceUrl": {
                        "type": "string"
                    },
                    "purposeCode": {
                        "$ref": "#/components/schemas/PurposeCode"
                    },
                    "depositAccount": {
                        "$ref": "#/components/schemas/PaymentAccountPublicDto"
                    },
                    "receiverCustomer": {
                        "$ref": "#/components/schemas/PublicCustomerProfileDto"
                    }
                },
                "required": [
                    "status",
                    "type",
                    "amount",
                    "currency"
                ]
            },
            "RouteStatus": {
                "type": "string",
                "enum": [
                    "active",
                    "inactive",
                    "kyc_required",
                    "kyc_for_country_required",
                    "kyc_in_progress",
                    "kyc_rejected",
                    "bank_account_required",
                    "bank_account_verification_required",
                    "wallet_account_required",
                    "invalid_amount"
                ]
            },
            "RouteDto": {
                "type": "object",
                "properties": {
                    "sourceCountry": {
                        "$ref": "#/components/schemas/Country"
                    },
                    "sourceCurrency": {
                        "$ref": "#/components/schemas/Currency"
                    },
                    "sourceMethod": {
                        "$ref": "#/components/schemas/TransferAccountType"
                    },
                    "destinationCountry": {
                        "$ref": "#/components/schemas/Country"
                    },
                    "destinationCurrency": {
                        "$ref": "#/components/schemas/Currency"
                    },
                    "destinationMethod": {
                        "$ref": "#/components/schemas/TransferAccountType"
                    },
                    "mode": {
                        "$ref": "#/components/schemas/TransferMode"
                    },
                    "providerCode": {
                        "$ref": "#/components/schemas/ProviderCode"
                    },
                    "status": {
                        "$ref": "#/components/schemas/RouteStatus"
                    },
                    "kycId": {
                        "type": "string"
                    },
                    "kycStatus": {
                        "type": "string"
                    },
                    "info": {
                        "type": "string"
                    }
                },
                "required": [
                    "sourceCountry",
                    "sourceCurrency",
                    "sourceMethod",
                    "destinationCountry",
                    "destinationCurrency",
                    "destinationMethod",
                    "mode",
                    "providerCode",
                    "status"
                ]
            },
            "RoutesDto": {
                "type": "object",
                "properties": {
                    "routes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RouteDto"
                        }
                    },
                    "approvedProviders": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProviderCode"
                        }
                    }
                },
                "required": [
                    "routes",
                    "approvedProviders"
                ]
            },
            "DepositBankAccountDto": {
                "type": "object",
                "properties": {
                    "bankName": {
                        "type": "string",
                        "description": "This can be bank name or bank branch name"
                    },
                    "bankAddress": {
                        "type": "string",
                        "description": "This can be the bank location or branch address"
                    },
                    "method": {
                        "$ref": "#/components/schemas/TransferAccountType"
                    },
                    "country": {
                        "$ref": "#/components/schemas/Country"
                    },
                    "bankAccountType": {
                        "type": "string",
                        "description": "This can be savings or checking"
                    },
                    "bankRoutingNumber": {
                        "type": "string",
                        "description": "This can be IFSC or internal routing number for domestic\\n     or international transfers respectively. SWIFT code for international transfers"
                    },
                    "bankAccountNumber": {
                        "type": "string",
                        "description": "This can be IBAN or account number for domestic"
                    },
                    "bankBeneficiaryName": {
                        "type": "string",
                        "description": "This can be the name of the account holder"
                    },
                    "bankDepositMessage": {
                        "type": "string",
                        "description": "This can be the message to be included in the deposit"
                    },
                    "swiftCode": {
                        "type": "string",
                        "description": "This can be SWIFT/BIC code for international transfers"
                    },
                    "feePercentage": {
                        "type": "string",
                        "description": "This can be the percentage fee charged for deposits"
                    }
                }
            },
            "CreateVirtualAccountDto": {
                "type": "object",
                "properties": {
                    "network": {
                        "type": "string"
                    }
                }
            },
            "PayeeBankAccountDto": {
                "type": "object",
                "properties": {
                    "country": {
                        "$ref": "#/components/schemas/Country"
                    },
                    "bankName": {
                        "type": "string",
                        "description": "This can be bank name or bank branch name"
                    },
                    "bankAddress": {
                        "type": "string",
                        "description": "This can be the bank location or branch address"
                    },
                    "type": {
                        "$ref": "#/components/schemas/TransferAccountType"
                    },
                    "bankAccountType": {
                        "$ref": "#/components/schemas/BankAccountType"
                    },
                    "bankRoutingNumber": {
                        "type": "string",
                        "description": "This can be IFSC or internal routing number for domestic\\n     or international transfers respectively. SWIFT code for international transfers"
                    },
                    "bankAccountNumber": {
                        "type": "string",
                        "description": "This can be IBAN or account number for domestic"
                    },
                    "bankBeneficiaryName": {
                        "type": "string",
                        "description": "This can be the name of the account holder"
                    },
                    "bankBeneficiaryAddress": {
                        "type": "string",
                        "description": "This can be the address of the account holder with pin code"
                    },
                    "swiftCode": {
                        "type": "string",
                        "description": "This can be SWIFT/BIC code for international transfers"
                    }
                },
                "required": [
                    "country",
                    "bankName",
                    "bankAddress",
                    "type",
                    "bankAccountType",
                    "bankAccountNumber",
                    "bankBeneficiaryName",
                    "bankBeneficiaryAddress",
                    "swiftCode"
                ]
            },
            "PayeeDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "createdAt": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "updatedAt": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "organizationId": {
                        "type": "string"
                    },
                    "nickName": {
                        "type": "string"
                    },
                    "firstName": {
                        "type": "string"
                    },
                    "lastName": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string",
                        "toLowerCase": true
                    },
                    "phoneNumber": {
                        "type": "string",
                        "description": "Phone number with country code without + sign"
                    },
                    "displayName": {
                        "type": "string"
                    },
                    "bankAccount": {
                        "$ref": "#/components/schemas/PayeeBankAccountDto"
                    },
                    "isGuest": {
                        "type": "boolean"
                    },
                    "hasBankAccount": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "id",
                    "organizationId",
                    "nickName",
                    "email",
                    "hasBankAccount"
                ]
            },
            "CreatePayeeBankAccountDto": {
                "type": "object",
                "properties": {
                    "country": {
                        "$ref": "#/components/schemas/Country"
                    },
                    "bankName": {
                        "type": "string",
                        "description": "This can be bank name or bank branch name"
                    },
                    "bankAddress": {
                        "type": "string",
                        "description": "This can be the bank location or branch address"
                    },
                    "type": {
                        "$ref": "#/components/schemas/TransferAccountType"
                    },
                    "bankAccountType": {
                        "$ref": "#/components/schemas/BankAccountType"
                    },
                    "bankRoutingNumber": {
                        "type": "string",
                        "description": "This can be IFSC or internal routing number for domestic\\n     or international transfers respectively. SWIFT code for international transfers"
                    },
                    "bankAccountNumber": {
                        "type": "string",
                        "description": "This can be IBAN or account number for domestic"
                    },
                    "bankBeneficiaryName": {
                        "type": "string",
                        "description": "This can be the name of the account holder"
                    },
                    "bankBeneficiaryAddress": {
                        "type": "string",
                        "description": "This can be the address of the account holder with pin code"
                    },
                    "swiftCode": {
                        "type": "string",
                        "description": "This can be SWIFT/BIC code for international transfers"
                    }
                },
                "required": [
                    "country",
                    "bankName",
                    "bankAddress",
                    "type",
                    "bankAccountType",
                    "bankAccountNumber",
                    "bankBeneficiaryName",
                    "bankBeneficiaryAddress",
                    "swiftCode"
                ]
            },
            "CreatePayeeDto": {
                "type": "object",
                "properties": {
                    "nickName": {
                        "type": "string"
                    },
                    "firstName": {
                        "type": "string"
                    },
                    "lastName": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string",
                        "toLowerCase": true
                    },
                    "phoneNumber": {
                        "type": "string",
                        "description": "Phone number with country code without + sign"
                    },
                    "bankAccount": {
                        "$ref": "#/components/schemas/CreatePayeeBankAccountDto"
                    }
                },
                "required": [
                    "nickName",
                    "email"
                ]
            },
            "UpdatePayeeDto": {
                "type": "object",
                "properties": {
                    "nickName": {
                        "type": "string"
                    },
                    "firstName": {
                        "type": "string"
                    },
                    "lastName": {
                        "type": "string"
                    },
                    "phoneNumber": {
                        "type": "string",
                        "description": "Phone number with country code without + sign"
                    }
                },
                "required": [
                    "nickName"
                ]
            },
            "ProviderDataDto": {
                "type": "object",
                "properties": {
                    "kycUrl": {
                        "type": "string"
                    },
                    "tosUrl": {
                        "type": "string"
                    },
                    "externalStatus": {
                        "type": "string"
                    }
                }
            },
            "ProviderDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "createdAt": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "updatedAt": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "organizationId": {
                        "type": "string"
                    },
                    "status": {
                        "$ref": "#/components/schemas/KycStatus"
                    },
                    "providerCode": {
                        "$ref": "#/components/schemas/ProviderCode"
                    },
                    "providerData": {
                        "$ref": "#/components/schemas/ProviderDataDto"
                    },
                    "externalKycId": {
                        "type": "string"
                    },
                    "externalCustomerId": {
                        "type": "string"
                    },
                    "supportRemittance": {
                        "type": "boolean"
                    },
                    "country": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "organizationId",
                    "status",
                    "providerCode",
                    "providerData",
                    "country"
                ]
            },
            "CreateProviderDto": {
                "type": "object",
                "properties": {
                    "providerCode": {
                        "$ref": "#/components/schemas/ProviderCode"
                    },
                    "country": {
                        "type": "string",
                        "description": "Country alpha3 code"
                    }
                },
                "required": [
                    "providerCode"
                ]
            },
            "UboAdditionalDataDto": {
                "type": "object",
                "properties": {
                    "state": {
                        "type": "string"
                    },
                    "has_ownership": {
                        "type": "boolean"
                    },
                    "is_signer": {
                        "type": "boolean"
                    },
                    "has_control": {
                        "type": "boolean"
                    },
                    "relationship_established_at": {
                        "type": "string"
                    },
                    "tax_identification_number": {
                        "type": "string"
                    },
                    "ownership_percent": {
                        "type": "number",
                        "example": 1
                    },
                    "gov_id_number": {
                        "type": "string"
                    }
                }
            },
            "OnboardOnPartnerAccountDto": {
                "type": "object",
                "properties": {
                    "kycId": {
                        "type": "string"
                    },
                    "providerCode": {
                        "$ref": "#/components/schemas/ProviderCode"
                    },
                    "auto": {
                        "type": "boolean"
                    },
                    "state": {
                        "type": "string"
                    },
                    "tax_identification_number": {
                        "type": "string"
                    },
                    "gov_id_number": {
                        "type": "string"
                    },
                    "business_industry": {
                        "type": "string"
                    },
                    "country": {
                        "type": "string",
                        "description": "Country alpha3 code"
                    },
                    "ubo_details": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UboAdditionalDataDto"
                        }
                    },
                    "signedAgreementId": {
                        "type": "string"
                    }
                },
                "required": [
                    "providerCode"
                ]
            },
            "OfframpQuoteRequestDto": {
                "type": "object",
                "properties": {
                    "sourceCountry": {
                        "$ref": "#/components/schemas/Country"
                    },
                    "destinationCountry": {
                        "$ref": "#/components/schemas/Country"
                    },
                    "amount": {
                        "type": "string",
                        "format": "int64",
                        "example": "9223372036854775807",
                        "minimum": 100000000
                    },
                    "currency": {
                        "$ref": "#/components/schemas/Currency"
                    },
                    "preferredDestinationPaymentMethods": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "preferredProviderId": {
                        "type": "string"
                    },
                    "thirdPartyPayment": {
                        "type": "boolean"
                    },
                    "destinationCurrency": {
                        "$ref": "#/components/schemas/Currency"
                    },
                    "onlyRemittance": {
                        "type": "boolean"
                    },
                    "preferredBankAccountId": {
                        "type": "string"
                    },
                    "payeeId": {
                        "type": "string"
                    }
                },
                "required": [
                    "sourceCountry",
                    "destinationCountry",
                    "amount",
                    "currency"
                ]
            },
            "OfframpQuoteResponseDto": {
                "type": "object",
                "properties": {
                    "minAmount": {
                        "type": "string",
                        "format": "int64",
                        "example": "9223372036854775807"
                    },
                    "maxAmount": {
                        "type": "string",
                        "format": "int64",
                        "example": "9223372036854775807"
                    },
                    "arrivalTimeMessage": {
                        "type": "string",
                        "format": "int64",
                        "example": "9223372036854775807"
                    },
                    "provider": {
                        "$ref": "#/components/schemas/ProviderDto"
                    },
                    "error": {
                        "type": "string"
                    },
                    "quotePayload": {
                        "type": "string"
                    },
                    "quoteSignature": {
                        "type": "string"
                    }
                }
            },
            "OnrampQuoteRequestDto": {
                "type": "object",
                "properties": {
                    "sourceCountry": {
                        "$ref": "#/components/schemas/Country"
                    },
                    "destinationCountry": {
                        "$ref": "#/components/schemas/Country"
                    },
                    "amount": {
                        "type": "string",
                        "format": "int64",
                        "example": "9223372036854775807",
                        "minimum": 100000000,
                        "maximum": 5000000000000
                    },
                    "currency": {
                        "$ref": "#/components/schemas/Currency"
                    },
                    "preferredSourcePaymentMethods": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "preferredProviderId": {
                        "type": "string"
                    }
                },
                "required": [
                    "sourceCountry",
                    "destinationCountry",
                    "amount",
                    "currency"
                ]
            },
            "OnrampQuoteResponseDto": {
                "type": "object",
                "properties": {
                    "minAmount": {
                        "type": "string",
                        "format": "int64",
                        "example": "9223372036854775807"
                    },
                    "maxAmount": {
                        "type": "string",
                        "format": "int64",
                        "example": "9223372036854775807"
                    },
                    "arrivalTimeMessage": {
                        "type": "string",
                        "format": "int64",
                        "example": "9223372036854775807"
                    },
                    "provider": {
                        "$ref": "#/components/schemas/ProviderDto"
                    },
                    "error": {
                        "type": "string"
                    },
                    "quotePayload": {
                        "type": "string"
                    },
                    "quoteSignature": {
                        "type": "string"
                    }
                }
            },
            "PublicOfframpQuoteRequestDto": {
                "type": "object",
                "properties": {
                    "sourceCountry": {
                        "$ref": "#/components/schemas/Country"
                    },
                    "destinationCountry": {
                        "type": "string"
                    },
                    "amount": {
                        "type": "string",
                        "format": "int64",
                        "example": "9223372036854775807",
                        "minimum": 100000000
                    }
                },
                "required": [
                    "sourceCountry",
                    "destinationCountry",
                    "amount"
                ]
            },
            "TransferScheduleStatus": {
                "type": "string",
                "enum": [
                    "active",
                    "inactive"
                ]
            },
            "TransferScheduleRepeatType": {
                "type": "string",
                "enum": [
                    "daily",
                    "weekly",
                    "monthly",
                    "one_time"
                ]
            },
            "TransferScheduleDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "createdAt": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "updatedAt": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "organizationId": {
                        "type": "string"
                    },
                    "status": {
                        "$ref": "#/components/schemas/TransferScheduleStatus"
                    },
                    "type": {
                        "$ref": "#/components/schemas/TransferMode"
                    },
                    "sourceCountry": {
                        "$ref": "#/components/schemas/Country"
                    },
                    "destinationCountry": {
                        "$ref": "#/components/schemas/Country"
                    },
                    "amount": {
                        "type": "string",
                        "format": "int64",
                        "example": "9223372036854775807",
                        "minimum": 100000000,
                        "maximum": 5000000000000
                    },
                    "currency": {
                        "$ref": "#/components/schemas/Currency"
                    },
                    "purposeCode": {
                        "$ref": "#/components/schemas/PurposeCode"
                    },
                    "sourceOfFunds": {
                        "$ref": "#/components/schemas/SourceOfFunds"
                    },
                    "recipientRelationship": {
                        "$ref": "#/components/schemas/RecipientRelationship"
                    },
                    "walletAddress": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "payeeId": {
                        "type": "string"
                    },
                    "payee": {
                        "$ref": "#/components/schemas/PayeeDto"
                    },
                    "repeatType": {
                        "$ref": "#/components/schemas/TransferScheduleRepeatType"
                    },
                    "schedule": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "organizationId",
                    "status",
                    "type",
                    "sourceCountry",
                    "destinationCountry",
                    "amount",
                    "currency",
                    "repeatType",
                    "schedule"
                ]
            },
            "CreateTransferScheduleDto": {
                "type": "object",
                "properties": {
                    "amount": {
                        "type": "string",
                        "format": "int64",
                        "example": "9223372036854775807",
                        "minimum": 100000000,
                        "maximum": 5000000000000
                    },
                    "purposeCode": {
                        "$ref": "#/components/schemas/PurposeCode"
                    },
                    "walletAddress": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "payeeId": {
                        "type": "string"
                    },
                    "repeatType": {
                        "$ref": "#/components/schemas/TransferScheduleRepeatType"
                    },
                    "schedule": {
                        "type": "string"
                    }
                },
                "required": [
                    "amount",
                    "repeatType",
                    "schedule"
                ]
            },
            "AllPointsTotalDto": {
                "type": "object",
                "properties": {
                    "total": {
                        "type": "number",
                        "example": 1
                    }
                },
                "required": [
                    "total"
                ]
            },
            "AllPointsDto": {
                "type": "object",
                "properties": {
                    "offrampTransferPoints": {
                        "$ref": "#/components/schemas/ListDto"
                    },
                    "payoutReferralPoints": {
                        "$ref": "#/components/schemas/ListDto"
                    }
                },
                "required": [
                    "offrampTransferPoints",
                    "payoutReferralPoints"
                ]
            },
            "TransactionPointDto": {
                "type": "object",
                "properties": {
                    "amountUSD": {
                        "type": "string"
                    },
                    "noOfTransactions": {
                        "type": "number",
                        "example": 1
                    },
                    "multiplier": {
                        "type": "number",
                        "example": 1
                    },
                    "perUsdPoint": {
                        "type": "number",
                        "example": 1
                    },
                    "points": {
                        "type": "number",
                        "example": 1
                    }
                },
                "required": [
                    "amountUSD",
                    "noOfTransactions",
                    "multiplier",
                    "perUsdPoint",
                    "points"
                ]
            },
            "ReferrerPointDto": {
                "type": "object",
                "properties": {
                    "reference": {
                        "type": "string"
                    },
                    "totalPoints": {
                        "type": "number",
                        "example": 1
                    },
                    "transactionPoints": {
                        "type": "number",
                        "example": 1
                    },
                    "referralPoints": {
                        "type": "number",
                        "example": 1
                    },
                    "totalTransactions": {
                        "type": "number",
                        "example": 1
                    }
                },
                "required": [
                    "reference",
                    "totalPoints",
                    "transactionPoints",
                    "referralPoints",
                    "totalTransactions"
                ]
            },
            "OrganizationDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "createdAt": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "updatedAt": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "ownerId": {
                        "type": "string",
                        "description": "User's id who owns organization"
                    },
                    "supportEmail": {
                        "type": "string",
                        "description": "Organization's support email"
                    },
                    "referralCode": {
                        "type": "string",
                        "description": "Referral code"
                    },
                    "referrerId": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "ownerId"
                ]
            },
            "ApplyReferralCodeDto": {
                "type": "object",
                "properties": {
                    "referralCode": {
                        "type": "string"
                    }
                },
                "required": [
                    "referralCode"
                ]
            },
            "InviteCodeType": {
                "type": "string",
                "enum": [
                    "virtual_account_us"
                ]
            },
            "InviteCodeStatus": {
                "type": "string",
                "enum": [
                    "active",
                    "used",
                    "expired"
                ]
            },
            "InviteCodeDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "createdAt": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "updatedAt": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "code": {
                        "type": "string"
                    },
                    "type": {
                        "$ref": "#/components/schemas/InviteCodeType"
                    },
                    "status": {
                        "$ref": "#/components/schemas/InviteCodeStatus"
                    },
                    "expirationDate": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "createdByOrgId": {
                        "type": "string"
                    },
                    "usedByOrgId": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "code",
                    "type",
                    "status",
                    "expirationDate",
                    "createdByOrgId"
                ]
            },
            "NotificationAuthDto": {
                "type": "object",
                "properties": {
                    "socket_id": {
                        "type": "string",
                        "description": "The socket ID from the client",
                        "example": "123.456"
                    },
                    "channel_name": {
                        "type": "string",
                        "description": "The channel name to authenticate (optional)",
                        "example": "private-org-123"
                    }
                },
                "required": [
                    "socket_id"
                ]
            },
            "NotificationAuthResponseDto": {
                "type": "object",
                "properties": {
                    "auth": {
                        "type": "string",
                        "description": "The authentication signature",
                        "example": "auth_token_string"
                    },
                    "user_data": {
                        "type": "string",
                        "description": "User data (only present for user authentication)",
                        "example": "{\\"id\\":\\"123\\",\\"user_info\\":{\\"name\\":\\"John Doe\\",\\"email\\":\\"john@example.com\\"}}"
                    }
                },
                "required": [
                    "auth"
                ]
            }
        }
    }
}